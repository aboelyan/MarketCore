@using MarketCore.ViewModels
@using System.Text.Json
@model ProductFormViewModel

@{
    ViewData["Title"] = "تعديل منتج";

    // تحويل القوائم إلى JSON لاستخدامها في JavaScript
    var unitOptions = Model.UnitList?.Select(u => new MarketCore.ViewModels.SimpleUnitView { value = u.Value, text = u.Text }).ToList()
                      ?? new List<MarketCore.ViewModels.SimpleUnitView>();

    var unitJson = JsonSerializer.Serialize(unitOptions);

    var existingUnitsJson = JsonSerializer.Serialize(Model.Units.Select(u => new
    {
        u.UnitID,
        u.Factor,
        u.BuyPrice,
        u.SellPrice,
        u.SellDiscount,
        u.Barcode
    }));
}

<h2 class="mb-4">✏️ تعديل منتج</h2>

<form asp-action="Edit" asp-route-id="@Model.Product.ID" method="post">
    <div class="card mb-4">
        <div class="card-header bg-primary text-white">🔹 بيانات المنتج</div>
        <div class="card-body row g-3">
            <div class="col-md-4">
                <label asp-for="Product.Code" class="form-label">كود المنتج</label>
                <input asp-for="Product.Code" class="form-control" readonly />
            </div>
            <div class="col-md-4">
                <label asp-for="Product.Name" class="form-label">اسم المنتج</label>
                <input asp-for="Product.Name" class="form-control" />
            </div>
            <div class="col-md-4">
                <label asp-for="Product.Type" class="form-label">النوع</label>
                <input asp-for="Product.Type" class="form-control" />
            </div>
            <div class="col-md-4">
                <label asp-for="Product.CategoryID" class="form-label">التصنيف</label>
                <select asp-for="Product.CategoryID" asp-items="Model.CategoryList" class="form-select">
                    <option value="">-- اختر تصنيف --</option>
                </select>
            </div>
            <div class="col-md-8">
                <label asp-for="Product.Description" class="form-label">الوصف</label>
                <textarea asp-for="Product.Description" class="form-control"></textarea>
            </div>
            <div class="col-md-4 form-check mt-3">
                <input asp-for="Product.IsActive" class="form-check-input" />
                <label asp-for="Product.IsActive" class="form-check-label">نشط</label>
            </div>
        </div>
    </div>

    <div class="card mb-4">
        <div class="card-header bg-success text-white">📦 وحدات المنتج</div>
        <div class="card-body">
            <table class="table table-bordered" id="unitsTable">
                <thead>
                    <tr>
                        <th>الوحدة</th>
                        <th>المعامل</th>
                        <th>سعر الشراء</th>
                        <th>سعر البيع</th>
                        <th>نسبة الخصم</th>
                        <th>الباركود</th>
                        <th>إجراء</th>
                    </tr>
                </thead>
                <tbody id="unitsBody"></tbody>
            </table>
            <button type="button" class="btn btn-outline-primary" onclick="addUnitRow()">+ إضافة وحدة</button>
        </div>
    </div>

    <div class="text-end">
        <button type="submit" class="btn btn-success">💾 حفظ</button>
        <a asp-action="Index" class="btn btn-secondary">إلغاء</a>
    </div>
</form>

@section Scripts {
    <script>
        let rowIndex = 0;
        const unitList = @Html.Raw(unitJson);
        const existingUnits = @Html.Raw(existingUnitsJson);

        function addUnitRow(unit = null) {
            let options = '';
            unitList.forEach(uOption => {
                const selected = unit && unit.UnitID == uOption.value ? 'selected' : '';
                options += `<option value="${uOption.value}" ${selected}>${uOption.text}</option>`;
            });

            const row = `
                <tr>
                    <td><select name="Units[${rowIndex}].UnitID" class="form-select">${options}</select></td>
                    <td><input name="Units[${rowIndex}].Factor" value="${unit?.Factor ?? ''}" class="form-control" type="number" step="0.01" /></td>
                    <td><input name="Units[${rowIndex}].BuyPrice" value="${unit?.BuyPrice ?? ''}" class="form-control" type="number" step="0.01" /></td>
                    <td><input name="Units[${rowIndex}].SellPrice" value="${unit?.SellPrice ?? ''}" class="form-control" type="number" step="0.01" /></td>
                    <td><input name="Units[${rowIndex}].SellDiscount" value="${unit?.SellDiscount ?? ''}" class="form-control" type="number" step="0.01" /></td>
                    <td><input name="Units[${rowIndex}].Barcode" value="${unit?.Barcode ?? ''}" class="form-control" /></td>
                    <td><button type="button" class="btn btn-danger btn-sm" onclick="removeRow(this)">✖</button></td>
                </tr>`;
            document.getElementById("unitsBody").insertAdjacentHTML("beforeend", row);
            rowIndex++;
        }

        function removeRow(btn) {
            btn.closest("tr").remove();
        }

        // تحميل وحدات المنتج الموجودة
        existingUnits.forEach(u => addUnitRow(u));
    </script>
}
